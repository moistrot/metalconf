" don't bother with vi compatibility
set nocompatible

" enable syntax highlighting
syntax enable
syntax on

" configure Vundle
filetype off

" set rtp+=~/.vim/bundle/Vundle.vim/

call plug#begin()
Plug 'tpope/vim-sensible'

" On-demand loading
Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }
Plug 'dracula/vim'
Plug 'vim-syntastic/syntastic'
Plug 'godlygeek/tabular'
Plug 'plasticboy/vim-markdown'
Plug 'asins/vimcdoc'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'scrooloose/nerdtree'
Plug 'jistr/vim-nerdtree-tabs'
Plug 'scrooloose/nerdcommenter'

call plug#end()

filetype plugin indent on

set hlsearch
set autoindent
set autoread                                                 " reload files when changed on disk, i.e. via `git checkout`
set backspace=2                                              " Fix broken backspace in some setups
set backupcopy=yes                                           " see :help crontab
set clipboard=unnamed                                        " yank and paste with the system clipboard
set directory-=.                                             " don't store swapfiles in the current directory
set encoding=utf-8
set fileencoding=utf8
set expandtab                                                " expand tabs to spaces
set ignorecase                                               " case-insensitive search
set incsearch                                                " search as you type
set laststatus=2                                             " always show statusline
set list                                                     " show trailing whitespace
set listchars=tab:▸\ ,trail:▫
set number                                                   " show line numbers
set ruler                                                    " show where you are
set scrolloff=3                                              " show context above/below cursorline
set shiftwidth=2                                             " normal mode indentation commands use 2 spaces
set showcmd
set smartcase                                                " case-sensitive search if any caps
set softtabstop=2                                            " insert mode tab and backspace use 2 spaces
set tabstop=8                                                " actual tabs occupy 8 characters
set wildignore=log/**,node_modules/**,target/**,tmp/**,*.rbc
set wildmenu                                                 " show a navigable menu for tab completion
set wildmode=longest,list,full
" Enable basic mouse behavior such as resizing buffers.
set mouse=a
if exists('$TMUX')  " Support resizing in tmux
  set ttymouse=xterm2
endif

autocmd InsertEnter * :set number
autocmd InsertLeave * :set relativenumber

" keyboard shortcuts
" map <F5> :!/usr/bin/python %
let mapleader = ','
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l
nmap <leader>b :CtrlPBuffer<CR>
nmap <leader>t :CtrlP<CR>
nmap <leader>T :CtrlPClearCache<CR>:CtrlP<CR>
nmap <leader>] :TagbarToggle<CR>
map <silent> <leader>c :source ~/.vimrc<CR>:filetype detect<CR>:exe ":echo 'vimrc reloaded'"<CR>
nnoremap <leader>r :w<CR> :exec '!python' shellescape(@%, 1)<cr>

" Enable folding
set foldmethod=indent
set foldlevel=99
nnoremap <space> za
" set clipboard=unnamed

au BufNewFile,BufRead *.py
    \ set tabstop=2 |
    \ set softtabstop=2 |
    \ set shiftwidth=2 |
    \ set textwidth=79 |
    \ set expandtab |
    \ set autoindent |
    \ set fileformat=unix

au BufNewFile,BufRead *.js, *.html, *.css
    \ set tabstop=2 |
    \ set softtabstop=2 |
    \ set shiftwidth=2


" md is markdown
" autocmd BufRead,BufNewFile *.md set filetype=markdown
"au BufNewFile,BufRead *.md setf markdown
au! BufRead,BufNewFile *.markdown set filetype=mkd
au! BufRead,BufNewFile *.md       set filetype=mkd

au BufNewFile,BufRead *.rs
      \ set tabstop=2 |
      \ set softtabstop=2 |
      \ set autoindent |
      \ set shiftwidth=2 |
      \ set filetype=rust

" UI
if has("gui_running")
  color dracula
  set go=aAce              " 去掉难看的工具栏和滑动条
  set transparency=10      " 透明背景
  set guifont=Monaco:h14   " 设置默认字体为monaco
  set showtabline=2        " 开启自带的tab栏
  set columns=180          " 设置宽
  set lines=50             " 设置长
  noremap <C-Tab> :tabnext<CR>
  noremap <C-S-Tab> :tabprev<CR>

  " Switch to specific tab numbers with Command-number
  noremap <D-1> :tabn 1<CR>
  noremap <D-2> :tabn 2<CR>
  noremap <D-3> :tabn 3<CR>
  noremap <D-4> :tabn 4<CR>
  noremap <D-5> :tabn 5<CR>
  noremap <D-6> :tabn 6<CR>
  noremap <D-7> :tabn 7<CR>
  noremap <D-8> :tabn 8<CR>
  noremap <D-9> :tabn 9<CR>
  " Command-0 goes to the last tab
  noremap <D-0> :tablast<CR>
endif

set mouse=a
if exists('$TMUX')  " Support resizing in tmux
  set ttymouse=xterm2
endif


if &term =~ "xterm"
  if has("terminfo")
    set t_Co=256
  else
    set t_Co=8
    set t_Sf=^[[3%dm
    set t_Sb=^[[4%dm
  endif
endif

"Plug 'asins/vimcdoc'
let helptags=$VIM."/vimfiles/doc"
set helplang=cn

" Plugins
"Plug 'vim-airline/vim-airline'
"Plug 'vim-airline/vim-airline-themes'


"Plug 'scrooloose/nerdtree'
let NERDTreeIgnore=['\.pyc$', '\~$', '\.class'] "ignore files in NERDTree
let g:NERDTreeWinSize = 30
let g:NERDTreeMouseMode = 1
" let g:NERDTreeMapToggleZoom = '<Space>'
let g:nerdtree_tabs_open_on_gui_startup = 0
let g:nerdtree_tabs_open_on_console_startup = 0
nmap <leader>d :NERDTreeToggle<CR>
nmap <leader>f :NERDTreeFind<CR>


let g:NERDSpaceDelims = 1
let g:NERDRemoveExtraSpaces = 1
let g:NERDCustomDelimiters = {
            \ 'vimentry': { 'left': '--' },
            \ }
map <leader>ac <Plug>NERDCommenterAlignBoth
map <leader>uc <Plug>NERDCommenterUncomment


"Plugin 'tmhedberg/SimpylFold'
"let g:SimpylFold_docstring_preview=1

"Plugin 'vim-scripts/indentpython.vim'
" 标出前后空白符
" highlight BadWhitespace ctermbg=red guibg=darkred
"au BufRead,BufNewFile *.py,*.pyw,*.c,*.h match BadWhitespace /\s\+$/


"Plugin 'nvie/vim-flake8'

"if has("gui_running")
"  highlight SpellBad term=underline gui=undercurl guisp=Orange 
"endif 
"let g:pyflakes_use_quickfix = 1 "这是开关 
"
"

let g:rustfmt_autosave = 1

let g:jedi#rename_command = "<leader>u"
let g:jedi#popup_on_dot = 0

